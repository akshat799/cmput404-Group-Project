# Generated by Django 3.1.6 on 2022-10-26 04:50

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('type', models.CharField(default='author', editable=False, max_length=300)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('url', models.CharField(default='http://127.0.0.1:8000/authors/<django.db.models.fields.UUIDField>', max_length=225)),
                ('host', models.CharField(blank=True, default='http://127.0.0.1:8000/', max_length=200)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
                ('displayName', models.CharField(default='', max_length=200)),
                ('githubName', models.CharField(blank=True, default='', max_length=100, verbose_name='githubName')),
                ('profileImage', models.URLField(default='https://cdn.pixabay.com/photo/2017/07/18/23/23/user-2517433_1280.png', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FriendModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user1', models.CharField(max_length=40)),
                ('user2', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='InboxModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LoginInformationModle',
            fields=[
                ('username', models.CharField(max_length=100, verbose_name='username')),
                ('password', models.CharField(max_length=100, verbose_name='password')),
                ('githubName', models.CharField(blank=True, default='', max_length=100, verbose_name='githubName')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='id')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
            ],
            options={
                'db_table': 'LoginInformation',
            },
        ),
        migrations.CreateModel(
            name='PostModel',
            fields=[
                ('type', models.CharField(default='post', editable=False, max_length=300)),
                ('title', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.URLField(default='http://CMPUT404-GROUP-PROJECT.herokuapp.com/', max_length=255)),
                ('origin', models.URLField(default='http://CMPUT404-GROUP-PROJECT.herokuapp.com/', max_length=255)),
                ('description', models.TextField()),
                ('contentType', models.CharField(choices=[('Text', (('text/markdown', 'markdown'), ('text/plain', 'plain'), ('text/html', 'html'))), ('Encoded Text', (('application/base64', 'base64'),)), ('Image', (('image/png;base64', '.png'), ('image/jpeg;base64', '.jpg')))], default='text/markdown', max_length=18)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('count', models.PositiveIntegerField(default=0)),
                ('size', models.PositiveIntegerField(default=0)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends')], default='PUBLIC', max_length=10)),
                ('unlisted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='ShareModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(default='authorName', max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Sharer', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Shared_post', to='backendapi.postmodel')),
            ],
        ),
        migrations.CreateModel(
            name='LikeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_context', models.CharField(max_length=200)),
                ('object', models.CharField(max_length=200)),
                ('summary', models.CharField(max_length=200)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actor', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('contentType', models.CharField(default='text/plain', max_length=18)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backendapi.postmodel')),
            ],
            options={
                'ordering': ['published'],
            },
        ),
    ]
